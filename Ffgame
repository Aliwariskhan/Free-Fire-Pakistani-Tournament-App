
<html>
<head>
    <title>Free Fire Tournament Reminder</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.3/dist/tailwind.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f3f4f6;
        }
        input, button {
            font-family: 'Poppins', sans-serif;
        }
        .bg-primary {
            background-color: #003049;
        }
        .hover-bg-secondary:hover {
            background-color: #d62828;
        }
        .focus-ring-tertiary:focus {
            border-color: #f77f00;
            ring-color: #f77f00;
        }
    </style>
</head>
<body class="min-h-screen flex flex-col justify-center items-center py-10">
    <div class="bg-white rounded-lg shadow-lg p-8 w-full max-w-md">
        <h1 class="text-2xl font-bold mb-6 text-center">Free Fire Tournament Reminder</h1>
        <form id="reminderForm" class="space-y-4">
            <div>
                <label for="playerId" class="block text-sm font-medium text-gray-700">Player ID</label>
                <input type="text" id="playerId" class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus-ring-tertiary" required>
            </div>
            <div>
                <label for="reminderTime" class="block text-sm font-medium text-gray-700">Match Schedule Reminder Time</label>
                <input type="time" id="reminderTime" class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus-ring-tertiary" required>
            </div>
            <div>
                <label for="taskDescription" class="block text-sm font-medium text-gray-700">Task Description</label>
                <input type="text" id="taskDescription" class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus-ring-tertiary" required>
            </div>
            <button type="button" id="submitButton" class="w-full py-2 px-4 bg-primary text-white font-bold rounded-md hover-bg-secondary transition">Add Task üöÄ</button>
        </form>

        <div id="tasksOutput" class="mt-6 p-4 bg-gray-100 rounded-md">
            <h2 class="text-xl font-semibold mb-2">Ongoing Tasks</h2>
            <ul id="ongoingTasks"></ul>
            <h2 class="text-xl font-semibold mt-4">Completed Tasks</h2>
            <ul id="completedTasks"></ul>
        </div>
    </div>

    <footer class="mt-12">
        <a href="https://youtube.com/@missytshorts-x7b1m?si=-Q5NA-SUDVNMSNpR" class="text-blue-500 hover:text-blue-700" target="_blank">Made with ‚ù§Ô∏è</a>
    </footer>

    <script>
        // Load tasks from local storage
        const loadTasks = () => {
            let tasks = JSON.parse(localStorage.getItem('tasks')) || { ongoing: [], completed: [] };
            displayTasks(tasks.ongoing, document.getElementById('ongoingTasks'), false);
            displayTasks(tasks.completed, document.getElementById('completedTasks'), true);
        };

        // Display tasks in the respective list
        const displayTasks = (tasks, listElement, isCompleted) => {
            listElement.innerHTML = '';
            tasks.forEach((task, index) => {
                const listItem = document.createElement('li');
                listItem.className = 'mb-2';
                listItem.innerHTML = `${task.description} at ${task.time} for Player ID: ${task.playerId} 
                ${!isCompleted ? `<button class="ml-2 text-sm text-green-500" onclick="markTaskAsComplete(${index})">Complete</button>` : ''}`;
                listElement.appendChild(listItem);
            });
        };

        // Mark task as complete
        const markTaskAsComplete = (taskIndex) => {
            let tasks = JSON.parse(localStorage.getItem('tasks'));
            let task = tasks.ongoing.splice(taskIndex, 1)[0];
            tasks.completed.push(task);
            localStorage.setItem('tasks', JSON.stringify(tasks));
            loadTasks();
        };

        // Add event listener to the add task button
        document.getElementById("submitButton").addEventListener("click", () => {
            const playerId = document.getElementById("playerId").value;
            const reminderTime = document.getElementById("reminderTime").value;
            const taskDescription = document.getElementById("taskDescription").value;
            if (!playerId || !reminderTime || !taskDescription) {
                alert("Please fill out all fields.");
                return;
            }

            let tasks = JSON.parse(localStorage.getItem('tasks')) || { ongoing: [], completed: [] };
            tasks.ongoing.push({ playerId, time: reminderTime, description: taskDescription });
            localStorage.setItem('tasks', JSON.stringify(tasks));
            loadTasks();
        });

        // Initialize the task list on page load
        loadTasks();

        // Reminder notification logic (placeholder)
        const setupNotifications = () => {
            // Placeholder: implement notification setup using the reminder time
        };
    </script>
</body>
</html>
